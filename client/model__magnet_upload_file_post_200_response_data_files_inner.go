/*
Alldebrid API

Welcome to the OpenAPI Alldebrid API v4 !<br /> You can use this API to access various Alldebrid services from custom applications or scripts.<br /> <br /> API is organized around REST,<br /> returns JSON-encoded responses and use standard HTTP response codes.<br /> <br /> All calls are to be made on the HTTPS endpoints.<br /> Some are public, others require to be authentificated with an apikey (see Authentication).<br /> <br /> You must also identify your apps or script with a meaningfull agent parameter.<br /> <br /> This API version is namespaced as v4, as such all endpoint start with /v4/,<br /> such like http://api.alldebrid.com/v4/ping?agent=apiShowcase.<br /> <br /> This API v4 should be the final version regarding general response format and errors (hopefully).<br />

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MagnetUploadFilePost200ResponseDataFilesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MagnetUploadFilePost200ResponseDataFilesInner{}

// MagnetUploadFilePost200ResponseDataFilesInner struct for MagnetUploadFilePost200ResponseDataFilesInner
type MagnetUploadFilePost200ResponseDataFilesInner struct {
	File *string `json:"file,omitempty"`
	Hash *string `json:"hash,omitempty"`
	Name *string `json:"name,omitempty"`
	Size *int64 `json:"size,omitempty"`
	Ready *bool `json:"ready,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Error *MagnetUploadFilePost200ResponseDataFilesInnerError `json:"error,omitempty"`
}

// NewMagnetUploadFilePost200ResponseDataFilesInner instantiates a new MagnetUploadFilePost200ResponseDataFilesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMagnetUploadFilePost200ResponseDataFilesInner() *MagnetUploadFilePost200ResponseDataFilesInner {
	this := MagnetUploadFilePost200ResponseDataFilesInner{}
	return &this
}

// NewMagnetUploadFilePost200ResponseDataFilesInnerWithDefaults instantiates a new MagnetUploadFilePost200ResponseDataFilesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMagnetUploadFilePost200ResponseDataFilesInnerWithDefaults() *MagnetUploadFilePost200ResponseDataFilesInner {
	this := MagnetUploadFilePost200ResponseDataFilesInner{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetFile(v string) {
	o.File = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetHash(v string) {
	o.Hash = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetSize(v int64) {
	o.Size = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetReady() bool {
	if o == nil || IsNil(o.Ready) {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetReady(v bool) {
	o.Ready = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetId(v int64) {
	o.Id = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetError() MagnetUploadFilePost200ResponseDataFilesInnerError {
	if o == nil || IsNil(o.Error) {
		var ret MagnetUploadFilePost200ResponseDataFilesInnerError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) GetErrorOk() (*MagnetUploadFilePost200ResponseDataFilesInnerError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given MagnetUploadFilePost200ResponseDataFilesInnerError and assigns it to the Error field.
func (o *MagnetUploadFilePost200ResponseDataFilesInner) SetError(v MagnetUploadFilePost200ResponseDataFilesInnerError) {
	o.Error = &v
}

func (o MagnetUploadFilePost200ResponseDataFilesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MagnetUploadFilePost200ResponseDataFilesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableMagnetUploadFilePost200ResponseDataFilesInner struct {
	value *MagnetUploadFilePost200ResponseDataFilesInner
	isSet bool
}

func (v NullableMagnetUploadFilePost200ResponseDataFilesInner) Get() *MagnetUploadFilePost200ResponseDataFilesInner {
	return v.value
}

func (v *NullableMagnetUploadFilePost200ResponseDataFilesInner) Set(val *MagnetUploadFilePost200ResponseDataFilesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMagnetUploadFilePost200ResponseDataFilesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMagnetUploadFilePost200ResponseDataFilesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMagnetUploadFilePost200ResponseDataFilesInner(val *MagnetUploadFilePost200ResponseDataFilesInner) *NullableMagnetUploadFilePost200ResponseDataFilesInner {
	return &NullableMagnetUploadFilePost200ResponseDataFilesInner{value: val, isSet: true}
}

func (v NullableMagnetUploadFilePost200ResponseDataFilesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMagnetUploadFilePost200ResponseDataFilesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


